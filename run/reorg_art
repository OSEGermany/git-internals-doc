#!/usr/bin/env bash
# SPDX-FileCopyrightText: 2023 Robin Vobruba <hoijui.quaero@gmail.com>
# SPDX-License-Identifier: AGPL-3.0-only
#
# See the output of "$0 -h" for details.

# Exit immediately on each error and unset variable;
# see: https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail
#set -Eeu

script_path="$(readlink -f "${BASH_SOURCE[0]}")"
#script_dir="$(dirname "$script_path")"
script_name="$(basename "$script_path")"

remove_and_commit=false

function print_help() {

	echo -e "$script_name -"
	echo "Reorganizes artwork into more natural categories."
	echo
	echo "Usage:"
	echo "  $script_name [OPTION...]"
	echo "Options:"
	echo "  -h, --help              Print this usage help and exits."
	echo "  --remove-and-commit     Additionally cleans up and creates a commit in the end."
	echo "Examples:"
	echo "  $script_name --help"
	echo "  $script_name"
}

function exit_if_git_unclean() {
    if [ -z "$(git status --porcelain)" ]
    then
        echo "INFO: Git working directory is clean, continuing ..."
    else
        >&2 echo "ERROR: Git working directory is *NOT* clean, aborting."
        >&2 echo "ERROR: Please check the output of 'git status'."
        exit 1
    fi
}

# read command-line args
POSITIONAL=()
while [[ $# -gt 0 ]]
do
	arg="$1"
	shift # $2 -> $1, $3 -> $2, ...

	case "$arg" in
		-h|--help)
			print_help
			exit 0
			;;
		--remove-and-commit)
			remove_and_commit=true
			;;
		*) # non-/unknown option
			POSITIONAL+=("$arg") # save it in an array for later
			;;
	esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

if ! [ -d artwork/bitmap ]
then
    >&2 echo "WARNING: There is no 'artwork/bitmap/' directory -> Nothing left to do; exiting!"
    exit 2
fi

exit_if_git_unclean

git mv artwork/vector/title.svg artwork/
git mv artwork/bitmap artwork/screenshots
git mv artwork/vector artwork/diagrams
git mv artwork/s1/* artwork/diagrams/
git mv artwork/s2/* artwork/diagrams/

rmdir artwork/s1
rmdir artwork/s2

sed -i -e 's|../artwork/vector/title.svg|../artwork/title.svg|g' text/*.md doc.yml
sed -i -e 's|../artwork/vector/|../artwork/diagrams/|g' text/*.md
sed -i -e 's|../artwork/bitmap/|../artwork/screenshots/|g' text/*.md
sed -i -e 's|../artwork/s1/|../artwork/diagrams/|g' text/*.md
sed -i -e 's|../artwork/s2/|../artwork/diagrams/|g' text/*.md

if $remove_and_commit
then
    git add text/*.md doc.yml
    git commit --message "Reorganized artwork\n\nUsing script '$script_path'."
fi
